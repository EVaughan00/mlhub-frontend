[{"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/index.tsx":"1","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/serviceWorker.ts":"2","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/app/store.ts":"3","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/App.tsx":"4","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/counter/counterSlice.ts":"5","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/views/Dashboard/Dashboard.tsx":"6","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/views/UploadModal/UploadView.tsx":"7","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Model_table/MLTable.tsx":"8","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Modal/m1.tsx":"9","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Modal/m2.tsx":"10"},{"size":648,"mtime":1608334055317,"results":"11","hashOfConfig":"12"},{"size":5424,"mtime":1608334055317,"results":"13","hashOfConfig":"12"},{"size":414,"mtime":1608334055313,"results":"14","hashOfConfig":"12"},{"size":492,"mtime":1608334055313,"results":"15","hashOfConfig":"12"},{"size":1851,"mtime":1608334055317,"results":"16","hashOfConfig":"12"},{"size":1561,"mtime":1608334055317,"results":"17","hashOfConfig":"12"},{"size":1870,"mtime":1608334055317,"results":"18","hashOfConfig":"12"},{"size":1233,"mtime":1608334055313,"results":"19","hashOfConfig":"12"},{"size":1340,"mtime":1608334055313,"results":"20","hashOfConfig":"12"},{"size":1858,"mtime":1608334055313,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1mx15ro",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"24"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/index.tsx",[],["47","48"],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/serviceWorker.ts",[],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/app/store.ts",[],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/App.tsx",["49"],"import React from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n} from \"react-router-dom\";\r\n\r\nimport Dashboard from \"./views/Dashboard/Dashboard\";\r\nimport UploadView from './views/UploadModal/UploadView';\r\n\r\nfunction App() {\r\n  return (\r\n      <Router>\r\n        <Switch>\r\n            <Route path=\"/upload\" component={UploadView}/>\r\n            <Route path=\"/\" component={Dashboard}/>\r\n        </Switch>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/counter/counterSlice.ts",[],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/views/Dashboard/Dashboard.tsx",[],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/views/UploadModal/UploadView.tsx",["50","51","52","53","54","55","56"],"import React, {useState} from 'react';\nimport axios from 'axios';\n\nimport Container from 'react-bootstrap/Container';\nimport {Button, Col, Row, Form, FormControl, Modal,} from 'react-bootstrap';\n\nimport M1 from '../../features/Modal/m1';\nimport M2 from '../../features/Modal/m2';\n\nimport config from '../../config.json';\n\ninterface Model {\n    Name:string,\n    visibility:string,\n    classification:string,\n    pyEnv:string\n}\n\n\nfunction UploadView(){\n\n    const [status, next] = useState(false);\n    const [loading, updateLoading] = useState(false);\n\n    const [modelInfo, updateInfo] = useState({\n       Name:\"\",\n       visibility:\"\",\n       classification:\"\",\n       pyEnv:\"\"\n    });\n\n    return (<>\n        <Container fluid className=\"d-flex flex-column justify-content-center align-content-center h-100\">\n\n            <div className=\"flex-1 ml-auto  mr-auto border border-dark p-5 \" style={{\n                borderRadius:25,\n                borderWidth:\"10px\",\n            }}>\n            {\n                loading?<img src='https://cdn.dribbble.com/users/503653/screenshots/3143656/fluid-loader.gif'/>:\n                (status?<M2 submitModel = {(data:any)=>{\n                    updateInfo({...modelInfo, ...data});\n                    updateLoading(true);\n                    uploadModel(modelInfo).then(()=>{\n                    setInterval(()=>{ window.location.href = \"/\";},1000);\n                    });\n                }\n                }/>:\n                <M1 next={(data:any)=>{\n                    next(true);\n                    updateInfo({...modelInfo, ...data});\n                }}/>)}\n            </div>\n\n        </Container>\n        </>)\n}\n\nasync function uploadModel(modelInfo:Model){\n   await axios.post(`${config.baseUrl}/models/create`,{\n        body:modelInfo\n    }).catch((e) => {\n        console.log(e);\n   })\n}\n\n\n\nexport default UploadView;","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Model_table/MLTable.tsx",[],"/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Modal/m1.tsx",["57","58"],"import React from 'react';\nimport {Col, Form, FormGroup, Row} from \"react-bootstrap\";\nimport FormLabel from 'react-bootstrap/FormLabel'\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl'\n\nfunction M1(props:any){\n    return (\n        <Form className=\"d-flex flex-column \" onSubmit={((e:any) =>{\n            e.preventDefault();\n\n            const formData = new FormData(e.target),\n            formDataObj = Object.fromEntries(formData.entries());\n\n            props.next(formDataObj);\n        })}>\n            <h1>Setup</h1>\n            <FormGroup className='mt-3'>\n                <FormLabel>Name</FormLabel>\n                <FormControl placeholder=\"model name\" className=\"\" required name=\"Name\"/>\n            </FormGroup>\n            <FormGroup>\n                <FormLabel>Visibility</FormLabel>\n                    <FormControl\n                        required\n                        as=\"select\"\n                        name=\"visibility\"\n                    >\n                        <option value=\"Public\">Public</option>\n                        <option value=\"Private\">Private</option>\n                    </FormControl>\n            </FormGroup>\n\n            <Button variant=\"primary\" type=\"submit\">\n                Next\n            </Button>\n        </Form>\n    )\n}\n\nexport default M1;","/home/evaughan/Documents/Projects/InnovationStation/frontend/src/features/Modal/m2.tsx",["59","60"],"import React from 'react';\nimport {Col, Form, FormGroup, Row} from \"react-bootstrap\";\nimport FormLabel from 'react-bootstrap/FormLabel'\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl'\n\nfunction M2(props:any){\n    return (\n        <>\n            <h1>Model Info</h1>\n        <Form className=\"d-flex flex-column \" onSubmit={((e:any) =>{\n            e.preventDefault();\n\n            const formData = new FormData(e.target),\n                formDataObj = Object.fromEntries(formData.entries());\n\n            props.submitModel(formDataObj);\n        })}>\n            <FormGroup>\n                <FormControl placeholder=\"Description\" required/>\n            </FormGroup>\n            <h1>Model specs</h1>\n\n\n            <FormGroup className='d-flex flex-row'>\n                <FormGroup className='p-2'>\n                    <FormLabel>Type</FormLabel>\n                    <FormControl placeholder=\"Description\" className=\"flex-1\"  as=\"select\" name=\"classificaton\">\n                        <option>TENSORFLOW</option>\n                        <option>SCIKIT_LEARN</option>\n                        <option>XGBOOST</option>\n                        <option>Custom</option>\n                    </FormControl>\n                </FormGroup>\n                <FormGroup className='p-2'>\n                    <FormLabel>Python Version</FormLabel>\n                    <FormControl placeholder=\"Description\" className=\"flex-1\"  as=\"select\" name=\"pyEnv\">\n                        <option>3.7</option>\n                        <option>3.5</option>\n                        <option>2.7</option>\n                    </FormControl>\n                </FormGroup>\n            </FormGroup>\n\n            <Button variant=\"primary\" type=\"submit\">\n                upload\n            </Button>\n        </Form>\n        </>\n    )\n}\n\nexport default M2;",{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":6,"column":5,"nodeType":"67","messageId":"68","endLine":6,"endColumn":9},{"ruleId":"65","severity":1,"message":"69","line":5,"column":9,"nodeType":"67","messageId":"68","endLine":5,"endColumn":15},{"ruleId":"65","severity":1,"message":"70","line":5,"column":17,"nodeType":"67","messageId":"68","endLine":5,"endColumn":20},{"ruleId":"65","severity":1,"message":"71","line":5,"column":22,"nodeType":"67","messageId":"68","endLine":5,"endColumn":25},{"ruleId":"65","severity":1,"message":"72","line":5,"column":27,"nodeType":"67","messageId":"68","endLine":5,"endColumn":31},{"ruleId":"65","severity":1,"message":"73","line":5,"column":33,"nodeType":"67","messageId":"68","endLine":5,"endColumn":44},{"ruleId":"65","severity":1,"message":"74","line":5,"column":46,"nodeType":"67","messageId":"68","endLine":5,"endColumn":51},{"ruleId":"75","severity":1,"message":"76","line":40,"column":25,"nodeType":"77","endLine":40,"endColumn":112},{"ruleId":"65","severity":1,"message":"70","line":2,"column":9,"nodeType":"67","messageId":"68","endLine":2,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":2,"column":31,"nodeType":"67","messageId":"68","endLine":2,"endColumn":34},{"ruleId":"65","severity":1,"message":"70","line":2,"column":9,"nodeType":"67","messageId":"68","endLine":2,"endColumn":12},{"ruleId":"65","severity":1,"message":"71","line":2,"column":31,"nodeType":"67","messageId":"68","endLine":2,"endColumn":34},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'Form' is defined but never used.","'FormControl' is defined but never used.","'Modal' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]